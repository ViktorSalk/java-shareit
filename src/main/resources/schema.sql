CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);

-- Индекс для поиска пользователей по email
CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);

CREATE TABLE IF NOT EXISTS item_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR(1000) NOT NULL,
    requestor_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_requests_to_users FOREIGN KEY(requestor_id) REFERENCES users(id)
);

-- Индекс для поиска запросов по requestor_id
CREATE INDEX IF NOT EXISTS idx_item_requests_requestor ON item_requests(requestor_id);
-- Индекс для сортировки запросов по дате создания
CREATE INDEX IF NOT EXISTS idx_item_requests_created ON item_requests(created);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(512) NOT NULL,
    available BOOLEAN NOT NULL,
    owner_id BIGINT NOT NULL,
    request_id BIGINT,
    CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users (id),
    CONSTRAINT fk_item_request FOREIGN KEY (request_id) REFERENCES item_requests (id)
);

-- Индекс для поиска вещей по владельцу
CREATE INDEX IF NOT EXISTS idx_items_owner ON items(owner_id);
-- Индекс для поиска вещей по запросу
CREATE INDEX IF NOT EXISTS idx_items_request ON items(request_id);
-- Индекс для поиска доступных вещей
CREATE INDEX IF NOT EXISTS idx_items_available ON items(available);
-- Индекс для полнотекстового поиска по имени и описанию (для PostgreSQL)
CREATE INDEX IF NOT EXISTS idx_items_name_description ON items USING gin(to_tsvector('russian', name || ' ' || description));

CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL,
    CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id),
    CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id)
);

-- Индекс для поиска бронирований по вещи
CREATE INDEX IF NOT EXISTS idx_bookings_item ON bookings(item_id);
-- Индекс для поиска бронирований по пользователю
CREATE INDEX IF NOT EXISTS idx_bookings_booker ON bookings(booker_id);
-- Индекс для поиска бронирований по статусу
CREATE INDEX IF NOT EXISTS idx_bookings_status ON bookings(status);
-- Составной индекс для поиска бронирований по дате начала и окончания
CREATE INDEX IF NOT EXISTS idx_bookings_dates ON bookings(start_date, end_date);
-- Индекс для поиска бронирований по вещи и статусу (часто используется вместе)
CREATE INDEX IF NOT EXISTS idx_bookings_item_status ON bookings(item_id, status);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(1000) NOT NULL,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id)
);

-- Индекс для поиска комментариев по вещи
CREATE INDEX IF NOT EXISTS idx_comments_item ON comments(item_id);
-- Индекс для поиска комментариев по автору
CREATE INDEX IF NOT EXISTS idx_comments_author ON comments(author_id);
-- Индекс для сортировки комментариев по дате создания
CREATE INDEX IF NOT EXISTS idx_comments_created ON comments(created);